
- Message Flash
    $this->setFlash(array('Inserted Successfully'), AppController::FLASH_DANGER);

- Page Title
    $this->set('title_for_layout', 'クライアントからのカバるっ!を確認');

- Log Error, Debug
    http://api.cakephp.org/2.6/class-CakeLog.html
    // manually logging
    $this->HandLog->error('Content is too long.');
    $this->HandLog->exception($e);
    or
    CakeLog::error('Content is too long.', 'manually');
    // system logging
    CakeLog::error('Content is too long.');

- Redirecting
    $this->redirect('/admin/articles/detail');

- Get data from Model
    http://book.cakephp.org/2.0/en/models.html
    http://book.cakephp.org/2.0/en/models/retrieving-your-data.html
    In Controller
        $members = $this->Member->getEmails(array(1, 2));
    In Model
        public function getEmails($ids)
        {
            $result = $this->find('all', array(
                'conditions' => array('user_info_id' => $ids), // conditions
                'fields' => array('DISTINCT name_kana'),
                'order' => array('upd_date DESC'),
                'group' => array('upd_date'),
            ));
            return $result;
        }

- Join
    In Model
    $result = $this->query('SELECT Article.title, Member.name_kana FROM article_infos as Article LEFT JOIN user_infos as Member on Article.ins_id = Member.user_info_id');

- Message
    add key and message in Config/common/message.php
    echo Common::getMessage('error', 'No exist', 10, __FILE__);

- Configuration
    add key and all its values in Config/common/config.php
    Common::getConfig('sex'); // full config
    Common::getConfig('sex', 'male'); // get specific value

- Conflict Model and Component when they has same name
    http://book.cakephp.org/2.0/en/controllers/components.html
    enable alias

- DboSource:lib/Cake/Model/Datasource/DboSource.php
    http://stackoverflow.com/questions/14049438/cakephp-class-dbosource-not-found
    In Model
    App::uses('ConnectionManager', 'Model');
    $db = ConnectionManager::getDataSource('default');
    echo $db->conditions(array('Member.id' => $ids),  true, false, $this);
    function buildStatement($query, Model $Model);

- Paging
    $fields = implode(', ', $db->prepareFields($member, array('fields' => $fields)));
    $table = $db->fullTableName($table);
    $where = $db->conditions($conditions, true, true, $member);
    $group = $db->group($group, $member);
    $order = $db->order($orderBy, 'ASC', $member);
    $limit = $db->limit($limit, $offset);
    // build paginator
    Controller/Component/PagingComponent.php
    PagingComponent::_paging
    // calling
    $this->Paging->pagingMember(10);

- AutoNumeric 1.9.27
    http://www.decorplanit.com/plugin/
    <input type="text" name="demoEuro" id="demoEuro" class="demo" data-a-sign="€ " data-a-dec="," data-a-sep="." />

- Max Length
    <input class="form-control valid" placeholder="ログインID" type="email" autofocus="autofocus" maxlength="256" name="login_id" value="" id="form_login_id" aria-required="true" aria-invalid="false">
    <input class="form-control valid" placeholder="ログインパスワード" maxlength="64" name="password" value="" type="password" id="form_password" aria-required="true" aria-invalid="false" />
- Validate on Browser
    http://jqueryvalidation.org/
    http://jqueryvalidation.org/files/demo/
    <input id="email" name="email" type="email">
    $.validator.addMethod('onlyEnglishAlphabet', function (value, element) {
            if (!value) {
                return true;
            }
            var pattern = /^[0-9a-z_]*$/gi;
            return pattern.test(value);
        }, function (result, element) {
            return $(element).attr('placeholder') + 'は半角英数のみで入力してください。';
        }
    );
    // use
    { required: true, onlyEnglishAlphabet: true }
    // error message
    var error_messages = {password: {required: "パスワードを入力してください。"}}
- Validate on Server
    http://book.cakephp.org/2.0/en/models/data-validation/validating-data-from-the-controller.html
    http://book.cakephp.org/2.0/en/models/data-validation.html
    lib/Cake/Utility/Validation.php
    In Controller
    $this->ModelName->set($this->request->data);
    if ($this->ModelName->validates4Edit()) {
        // it validated logic
    } else {
        // didn't validate logic
        $errors = $this->ModelName->validationErrors;
    }
    In Model
    protected function _setValidate()
    {
        return array(
            'fieldName1' => array(
                // or: array('ruleName', 'param1', 'param2' ...)
                'rule' => 'ruleName',
                'required' => true,
                'allowEmpty' => false,
                // or: 'update'
                'on' => 'create',
                'message' => 'Your Error Message'
            )
        );
    }
    class Post extends AppModel {
    protected function _setValidate()
    {
        return array(
            'slug' => array(
                'rule' => 'alphaNumericDashUnderscore',
                'message' => 'Slug can only be letters,' .
                    ' numbers, dash and underscore'
            )
        );

        public function alphaNumericDashUnderscore($check) {
            // $data array is passed using the form field name as the key
            // have to extract the value to make the function generic
            $value = array_values($check);
            $value = $value[0];

            return preg_match('|^[0-9a-zA-Z_-]*$|', $value);
        }
    }
    In Template
    <input class="form-control" placeholder="sample@lucky.co.jp" value="<?php echo $data ? $this->app->escape($data['email']) : null; ?>" name="email" id="form_email" />
    <label id="form_email-error" class="error <?php echo isset($errors['email']) ? '' : ' server-hidden '; ?>" for="email" ><?php echo isset($errors['email']) ? $this->app->escape($errors['email']) : ''; ?></label>

- Upload
    http://cakephp-upload.readthedocs.org/en/latest/installation.html

- Base Urls
    BASE_URL: <?php echo $this->Html->meta('icon', BASE_URL . '/favicon.ico'); ?>
    IMAGES_URL: <img src="<?php echo IMAGES_URL; ?>logo.png" width="100"/>
    CSS_URL: <?php echo $this->Html->css('plugins/morris.css'); ?> or <?php echo $this->Html->css(CSS_URL . 'plugins/morris.css'); ?>
    JS_URL: <?php echo $this->Html->script('jquery.js'); ?> or <?php echo $this->Html->script(JS_URL . 'jquery.js'); ?>

- AutoLoad JS, CSS for plugin, controller action
    WebRoot/{plugin}.js,
    WebRoot/{plugin}/{controller}.js
    WebRoot/{plugin}/{controller}/{action}.js
    WebRoot/{plugin}.css,
    WebRoot/{plugin}/{controller}.css
    WebRoot/{plugin}/{controller}/{action}.css